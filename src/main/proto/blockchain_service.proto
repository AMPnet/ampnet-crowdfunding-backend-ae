syntax = "proto3";
option java_multiple_files = true;
package com.ampnet.crowdfunding.proto;

/********** IMPORTANT NOTE:***************
All amount (fiat) values in request and response messages are x100 format integers,
for example amount: 1550 is actually 15.50 EUR.
******************************************/

//////// Cooperative contract messages ///////

message GenerateAddWalletTxRequest {
    string wallet = 1;
}

message WalletActiveRequest {
    string wallet_tx_hash = 1;
}

message WalletActiveResponse {
    bool active = 1;
}


///////// EUR contract messages //////////

message BalanceRequest {
    string wallet_tx_hash = 1;
}

message BalanceResponse {
    string balance = 1;
}

message GenerateMintTxRequest {
    string to_tx_hash = 1;
    string amount = 2;
}

message GenerateBurnFromTxRequest {
    string burn_from_tx_hash = 1;
}

message GenerateApproveWithdrawTxRequest {
    string from_tx_hash = 1;
    string amount = 2;
}

message GenerateInvestTxRequest {
    string from_tx_hash = 1;
    string project_tx_hash = 2;
    string amount = 3;
}

///////// Organization contract //////////



///////// Project contract ///////////////

message GenerateStartRevenueSharesPayoutTxRequest {
    string from_tx_hash = 1;
    string project_tx_hash = 2;
    string revenue = 3;
}


////////// Transaction messages //////////

message PostTxRequest {
    string data = 1;
}

message PostVaultTxRequest {
    string data = 1;
}

message PostTxResponse {
    string tx_hash = 1;
}

///////// Contract create messages /////////

message GenerateCreateOrganizationTxRequest {
    string from_tx_hash = 1;
}

message GenerateCreateProjectTxRequest {
    string from_tx_hash = 1;
    string organization_tx_hash = 2;
    string max_investment_per_user = 3;
    string min_investment_per_user = 4;
    string investment_cap = 5;
    string end_investment_time = 6;
}

////////// Generic messages ////////////////

message RawTxResponse {
    string tx = 1;
}

message Empty {

}


///////// Service definition ////////////////

service BlockchainService {

    // Cooperative

    rpc GenerateAddWalletTx(GenerateAddWalletTxRequest) returns (RawTxResponse);
    rpc IsWalletActive(WalletActiveRequest) returns (WalletActiveResponse);


    // EUR

    rpc GenerateMintTx(GenerateMintTxRequest) returns (RawTxResponse);
    rpc GenerateBurnFromTx(GenerateBurnFromTxRequest) returns (RawTxResponse);
    rpc GenerateApproveWithdrawTx(GenerateApproveWithdrawTxRequest) returns (RawTxResponse);
    rpc GenerateInvestTx(GenerateInvestTxRequest) returns (RawTxResponse);
    rpc GetBalance(BalanceRequest) returns (BalanceResponse);


    // Organization


    // Project

    rpc GenerateStartRevenueSharesPayoutTx(GenerateStartRevenueSharesPayoutTxRequest) returns (RawTxResponse);


    // Contract create

    rpc GenerateCreateOrganizationTx(GenerateCreateOrganizationTxRequest) returns (RawTxResponse);
    rpc GenerateCreateProjectTx(GenerateCreateProjectTxRequest) returns (RawTxResponse);


    // Transactions

    rpc PostTransaction(PostTxRequest) returns (PostTxResponse);

}
